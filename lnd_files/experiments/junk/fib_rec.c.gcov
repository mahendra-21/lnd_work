        -:    0:Source:fib_rec.c
        -:    0:Graph:fib_rec.gcno
        -:    0:Data:fib_rec.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:
        -:    3:#ifdef flag
      276:    4:int fib(int num) {
        -:    5:/*
        -:    6:    if (0 == num) {
        -:    7:        return 0;
        -:    8:    } else if (1 == num) {
        -:    9:        return 1;
        -:   10:    } else {
        -:   11:        return fib(num - 1) + fib(num - 2);
        -:   12:    }
        -:   13: //   if (1 >= num)   return num;
        -:   14: */
      276:   15:    return (0 == num) ? 0 : (1 == num) ? 1 : fib(num - 1) + fib(num - 2);
        -:   16:}
        -:   17:
        1:   18:int main(void)
        -:   19:{
        1:   20:    int num = 0;
        -:   21:
        1:   22:    printf("fib series: ");
       11:   23:    for (num = 0; num < 10; num++)
       10:   24:        printf("%d   ", fib(num));
        -:   25:
        1:   26:    printf("\n");
        1:   27:    return 0;
        -:   28:}
        -:   29:#endif
        -:   30:
        -:   31:#ifdef flag1
        -:   32:int main(void)
        -:   33:{
        -:   34:    int upto = 10;
        -:   35:    int va;
        -:   36:    int va1 = 0;
        -:   37:    int va2 = 1;
        -:   38:    
        -:   39:    printf("fib # -> ");
        -:   40:    printf("%d %d", va1, va2);
        -:   41:
        -:   42:    while (upto--) {
        -:   43:        va = va1 + va2;
        -:   44:        va1 = va2;
        -:   45:        va2 = va;
        -:   46:        printf(" %d", va);
        -:   47:    }
        -:   48:
        -:   49:    printf("\n");
        -:   50:    return 0;
        -:   51:}
        -:   52:#endif
